{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","scrDoc","title","sandbox","frameBorder","height","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAYe,SAASA,EAAOC,GAAQ,IAE/BC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SAL8B,EAOVC,oBAAS,GAPC,mBAO3BC,EAP2B,KAOrBC,EAPqB,KAalC,OACI,yBAAKC,UAAS,2BAAuBF,EAAO,GAAK,cAC9C,yBAAKE,UAAY,gBACfN,EACD,4BAAQM,UAAU,yBACdC,KAAK,SACLC,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,OAEpC,kBAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,QAGnD,kBAAC,aAAD,CACIC,eAhBf,SAAsBC,EAAQC,EAAMd,GAChCC,EAASD,IAgBEA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACLC,cAAa,EACbC,MAAM,EACNC,KAAMpB,EACNqB,aAAY,EACZC,MAAO,eCzCX,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAHK,iBAGkBF,EAD0B,EAG7BpB,oBAAS,WACnC,IAAMuB,EAAYC,aAAaC,QAAQH,GAEnC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACAA,IAEAA,KAXwC,mBAGhDvB,EAHgD,KAGzC8B,EAHyC,KAmBvD,OAJAC,qBAAU,WACVL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAC9C,CAACwB,EAAaxB,IAEV,CAACA,EAAO8B,GCyCJI,MA3Df,WAAgB,IAAD,EACWb,EAAgB,OAAQ,IADnC,mBACNc,EADM,KACAC,EADA,OAESf,EAAgB,MAAO,IAFhC,mBAENgB,EAFM,KAEDC,EAFC,OAGOjB,EAAgB,KAAM,IAH7B,mBAGNkB,EAHM,KAGFC,EAHE,OAIetC,mBAAS,IAJxB,mBAINuC,EAJM,KAIEC,EAJF,KAsBb,OAhBEX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,yCAAD,OAEGP,EAFH,uCAGIE,EAHJ,yCAIKE,EAJL,8CAOR,KAEH,OAAO,kBAAMM,aAAaF,MAC1B,CAACR,EAAKE,EAAIE,IAKZ,oCACA,wBAAIlC,UAAU,SAAd,iBACE,yBAAKA,UAAU,iBACb,kBAACT,EAAD,CACEE,SAAS,MACTC,YAAY,OACZC,MAAOmC,EACPlC,SAAUmC,IAEZ,kBAACxC,EAAD,CACEE,SAAS,MACTC,YAAY,MACZC,MAAOqC,EACPpC,SAAUqC,IAEZ,kBAAC1C,EAAD,CACEE,SAAS,aACTC,YAAY,KACZC,MAAOuC,EACPtC,SAAUuC,KAGd,yBAAKnC,UAAU,QACb,4BACAyC,OAAQL,EACRM,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,OAAO,OACPC,MAAM,YCnDdC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.798256e3.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\n\n\n\nexport default function Editor(props) {\n    const {\n        language,\n        displayName,\n        value,\n        onChange\n    } = props\n    const [open, setOpen] = useState(true)\n\nfunction handleChange(editor, data, value) {\n    onChange(value)\n}\n\n    return (\n        <div className ={`editor-container ${open ? '' : 'collapsed'}`}>\n           <div className = \"editor-title\">\n            {displayName}\n            <button className=\"expand-collapse-button\"\n                type=\"button\"\n                onClick={() => setOpen(prevOpen => !prevOpen)}\n            >\n                <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt}/>\n           </button> \n        </div>\n           <ControlledEditor\n               onBeforeChange={handleChange}\n               value={value}\n               className=\"code-mirror-wrapper\"\n               options={{\n                   lineWrapping:true,\n                   lint: true,\n                   mode: language,\n                   lineNumbers:true,\n                   theme: 'material'\n               }}\n            />\n        </div>\n    )\n}\n\n","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'developer_pen-'\n\nexport default function useLocalStorage(key, initialValue) {\n    const prefixedKey = PREFIX + key\n\n    const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n\n        if (jsonValue != null) return JSON.parse(jsonValue)\n\n        if (typeof initialValue === 'function') {\n            return initialValue()\n        } else {\n            return initialValue\n        }\n    })\n\n    useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n    }, [prefixedKey, value])\n\n    return [value, setValue]\n}","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor';\nimport useLocalStorage from '../hooks/useLocalStorage'\n\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n    useEffect(() => {\n      const timeout = setTimeout(() => {\n        setSrcDoc(`\n          <html>\n            <body>${html}</body>\n            <style>${css}</style>\n            <script>${js}</script>\n          </html>\n        `)\n      }, 250)\n\n      return () => clearTimeout(timeout)\n    },[html,css,js])\n\n  \n\n  return (\n    <>\n    <h3 className=\"title\">Developer Pen</h3>\n      <div className=\"pane top-pane\">\n        <Editor \n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml} \n          />\n        <Editor \n          language=\"css\" \n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss} \n          />\n        <Editor \n          language=\"javascript\" \n          displayName=\"JS\"\n          value={js}\n          onChange={setJs} \n          />     \n      </div>\n      <div className=\"pane\">\n        <iframe\n        scrDoc={srcDoc}\n        title=\"output\"\n        sandbox=\"allow-scripts\"\n        frameBorder=\"0\"\n        height=\"100%\"\n        width=\"100%\"\n        />\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}